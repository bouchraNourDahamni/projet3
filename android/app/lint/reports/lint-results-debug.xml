<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.1.2">

    <issue id="ScrollViewSize" severity="Warning"
        message="This androidx.constraintlayout.widget.ConstraintLayout should use `android:layout_height=&quot;wrap_content&quot;`"
        category="Correctness" priority="7" summary="ScrollView size validation"
        explanation="ScrollView children must set their `layout_width` or `layout_height` attributes to `wrap_content` rather than `fill_parent` or `match_parent` in the scrolling dimension"
        errorLine1="            android:layout_height=&quot;match_parent&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\login.xml"
            line="32" column="13" />
    </issue>

    <issue id="ScrollViewSize" severity="Warning"
        message="This androidx.constraintlayout.widget.ConstraintLayout should use `android:layout_height=&quot;wrap_content&quot;`"
        category="Correctness" priority="7" summary="ScrollView size validation"
        explanation="ScrollView children must set their `layout_width` or `layout_height` attributes to `wrap_content` rather than `fill_parent` or `match_parent` in the scrolling dimension"
        errorLine1="            android:layout_height=&quot;match_parent&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="32" column="13" />
    </issue>

    <issue id="ApplySharedPref" severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness" priority="6" summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="                editor.commit()" errorLine2="                ~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\java\clientleger\faismoiundessin\DrawActivity.kt"
            line="194" column="17" />
    </issue>

    <issue id="MissingConstraints" severity="Error"
        message="This view is not constrained. It only has designtime positions, so it will jump to (0,0) at runtime unless you add the constraints"
        category="Correctness" priority="6" summary="Missing Constraints in ConstraintLayout"
        explanation="The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections."
        errorLine1="    &lt;SeekBar" errorLine2="     ~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\menu.xml"
            line="7" column="6" />
    </issue>

    <issue id="UnusedAttribute" severity="Warning"
        message="Attribute `usesCleartextTraffic` is only used in API level 23 and higher (current min is 21)"
        category="Correctness" priority="6" summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="        android:usesCleartextTraffic=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\AndroidManifest.xml"
            line="15" column="9" />
    </issue>

    <issue id="AppCompatResource" severity="Error"
        message="Should use `app:showAsAction` with the appcompat library with `xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;`"
        category="Correctness" priority="5" summary="Menu namespace"
        explanation="When using the appcompat library, menu resources should refer to the `showAsAction` (or `actionViewClass`, or `actionProviderClass`) in the `app:` namespace, not the `android:` namespace.&#xA;&#xA;Similarly, when **not** using the appcompat library, you should be using the `android:showAsAction` (or `actionViewClass`, or `actionProviderClass`) attribute."
        errorLine1="        android:showAsAction=&quot;always&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\menu\main.xml"
            line="7" column="9" />
    </issue>

    <issue id="AppCompatResource" severity="Error"
        message="Should use `app:showAsAction` with the appcompat library with `xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;`"
        category="Correctness" priority="5" summary="Menu namespace"
        explanation="When using the appcompat library, menu resources should refer to the `showAsAction` (or `actionViewClass`, or `actionProviderClass`) in the `app:` namespace, not the `android:` namespace.&#xA;&#xA;Similarly, when **not** using the appcompat library, you should be using the `android:showAsAction` (or `actionViewClass`, or `actionProviderClass`) attribute."
        errorLine1="        android:showAsAction=&quot;always&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\menu\main.xml"
            line="12" column="9" />
    </issue>

    <issue id="AppCompatResource" severity="Error"
        message="Should use `app:showAsAction` with the appcompat library with `xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;`"
        category="Correctness" priority="5" summary="Menu namespace"
        explanation="When using the appcompat library, menu resources should refer to the `showAsAction` (or `actionViewClass`, or `actionProviderClass`) in the `app:` namespace, not the `android:` namespace.&#xA;&#xA;Similarly, when **not** using the appcompat library, you should be using the `android:showAsAction` (or `actionViewClass`, or `actionProviderClass`) attribute."
        errorLine1="        android:showAsAction=&quot;ifRoom&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\menu\main.xml"
            line="17" column="9" />
    </issue>

    <issue id="AppCompatResource" severity="Error"
        message="Should use `app:showAsAction` with the appcompat library with `xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;`"
        category="Correctness" priority="5" summary="Menu namespace"
        explanation="When using the appcompat library, menu resources should refer to the `showAsAction` (or `actionViewClass`, or `actionProviderClass`) in the `app:` namespace, not the `android:` namespace.&#xA;&#xA;Similarly, when **not** using the appcompat library, you should be using the `android:showAsAction` (or `actionViewClass`, or `actionProviderClass`) attribute."
        errorLine1="        android:showAsAction=&quot;ifRoom&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\menu\main.xml"
            line="23" column="9" />
    </issue>

    <issue id="AppCompatResource" severity="Error"
        message="Should use `app:showAsAction` with the appcompat library with `xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;`"
        category="Correctness" priority="5" summary="Menu namespace"
        explanation="When using the appcompat library, menu resources should refer to the `showAsAction` (or `actionViewClass`, or `actionProviderClass`) in the `app:` namespace, not the `android:` namespace.&#xA;&#xA;Similarly, when **not** using the appcompat library, you should be using the `android:showAsAction` (or `actionViewClass`, or `actionProviderClass`) attribute."
        errorLine1="        android:showAsAction=&quot;ifRoom&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\menu\main.xml"
            line="29" column="9" />
    </issue>

    <issue id="AppCompatResource" severity="Error"
        message="Should use `app:showAsAction` with the appcompat library with `xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;`"
        category="Correctness" priority="5" summary="Menu namespace"
        explanation="When using the appcompat library, menu resources should refer to the `showAsAction` (or `actionViewClass`, or `actionProviderClass`) in the `app:` namespace, not the `android:` namespace.&#xA;&#xA;Similarly, when **not** using the appcompat library, you should be using the `android:showAsAction` (or `actionViewClass`, or `actionProviderClass`) attribute."
        errorLine1="        android:showAsAction=&quot;never&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\menu\main.xml"
            line="34" column="9" />
    </issue>

    <issue id="GradleDependency" severity="Warning"
        message="A newer version of androidx.core:core-ktx than 1.2.0 is available: 1.3.2"
        category="Correctness" priority="4" summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.core:core-ktx:1.2.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\build.gradle"
            line="50" column="5" />
    </issue>

    <issue id="GradleDependency" severity="Warning"
        message="A newer version of androidx.appcompat:appcompat than 1.1.0 is available: 1.2.0"
        category="Correctness" priority="4" summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.appcompat:appcompat:1.1.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\build.gradle"
            line="51" column="5" />
    </issue>

    <issue id="GradleDependency" severity="Warning"
        message="A newer version of com.google.android.material:material than 1.1.0 is available: 1.3.0"
        category="Correctness" priority="4" summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.google.android.material:material:1.1.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\build.gradle"
            line="52" column="5" />
    </issue>

    <issue id="GradleDependency" severity="Warning"
        message="A newer version of androidx.constraintlayout:constraintlayout than 1.1.3 is available: 2.0.4"
        category="Correctness" priority="4" summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.constraintlayout:constraintlayout:1.1.3&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\build.gradle"
            line="54" column="5" />
    </issue>

    <issue id="GradleDependency" severity="Warning"
        message="A newer version of androidx.lifecycle:lifecycle-livedata-ktx than 2.2.0 is available: 2.3.0"
        category="Correctness" priority="4" summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.lifecycle:lifecycle-livedata-ktx:2.2.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\build.gradle"
            line="55" column="5" />
    </issue>

    <issue id="GradleDependency" severity="Warning"
        message="A newer version of androidx.lifecycle:lifecycle-viewmodel-ktx than 2.2.0 is available: 2.3.0"
        category="Correctness" priority="4" summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\build.gradle"
            line="56" column="5" />
    </issue>

    <issue id="GradleDependency" severity="Warning"
        message="A newer version of com.google.android.material:material than 1.1.0 is available: 1.3.0"
        category="Correctness" priority="4" summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.google.android.material:material:1.1.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\build.gradle"
            line="57" column="5" />
    </issue>

    <issue id="GradleDependency" severity="Warning"
        message="A newer version of com.squareup.okhttp3:okhttp than 3.10.0 is available: 4.9.0"
        category="Correctness" priority="4" summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;com.squareup.okhttp3:okhttp:3.10.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\build.gradle"
            line="58" column="5" />
    </issue>

    <issue id="SourceLockedOrientationActivity" severity="Warning"
        message="You should not lock orientation of your activities, so that you can support a good user experience for any device or orientation"
        category="Correctness" priority="4" summary="Incompatible setRequestedOrientation value"
        explanation="The `Activity` should not be locked to a portrait orientation so that users&#xA;can take advantage of the multi-window environments and larger landscape-first screens&#xA;that Android runs on such as Chrome OS. To fix the issue, consider calling&#xA;`setRequestedOrientation` with the `ActivityInfo.SCREEN_ORIENTATION_FULL_SENSOR` or&#xA;`ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED` options or removing the call&#xA;all together."
        errorLine1="        requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\java\clientleger\faismoiundessin\DrawActivity.kt"
            line="55" column="9" />
    </issue>

    <issue id="SourceLockedOrientationActivity" severity="Warning"
        message="You should not lock orientation of your activities, so that you can support a good user experience for any device or orientation"
        category="Correctness" priority="4" summary="Incompatible setRequestedOrientation value"
        explanation="The `Activity` should not be locked to a portrait orientation so that users&#xA;can take advantage of the multi-window environments and larger landscape-first screens&#xA;that Android runs on such as Chrome OS. To fix the issue, consider calling&#xA;`setRequestedOrientation` with the `ActivityInfo.SCREEN_ORIENTATION_FULL_SENSOR` or&#xA;`ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED` options or removing the call&#xA;all together."
        errorLine1="        this.requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\java\clientleger\faismoiundessin\GraphicsActivity.kt"
            line="28" column="9" />
    </issue>

    <issue id="AllowBackup" severity="Warning"
        message="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute `android:fullBackupContent` to specify an `@xml` resource which configures which files to backup. More info: https://developer.android.com/training/backup/autosyncapi.html"
        category="Security" priority="3" summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at https://developer.android.com/reference/android/R.attr.html#allowBackup&#xA;&#xA;By default, this flag is set to `true` which means application data can be backed up and restored by the OS. Setting `allowBackup=&quot;false&quot;` opts the application out of being backed up and so users can&apos;t restore data related to it when they go through the device setup wizard.&#xA;&#xA;Allowing backups may have security consequences for an application. Currently `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.&#xA;&#xA;To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.&#xA;&#xA;If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` to configure auto backup."
        url="https://developer.android.com/training/backup/autosyncapi.html"
        urls="https://developer.android.com/training/backup/autosyncapi.html,https://developer.android.com/reference/android/R.attr.html#allowBackup"
        errorLine1="    &lt;application" errorLine2="     ~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\AndroidManifest.xml"
            line="14" column="6" />
    </issue>

    <issue id="DrawAllocation" severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance" priority="9" summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="            canvas.drawOval(RectF(-r, -r, r, r), mPaint)"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\java\clientleger\faismoiundessin\ColorPickerDialog.kt"
            line="45" column="29" />
    </issue>

    <issue id="DrawAllocation" severity="Warning"
        message="Avoid object allocations during draw/layout operations (preallocate and reuse instead)"
        category="Performance" priority="9" summary="Memory allocations within drawing code"
        explanation="You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.&#xA;&#xA;The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.&#xA;&#xA;Some methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way."
        errorLine1="            canvas.drawBitmap(mBitmapBackground, 0f, 0f, Paint())"
        errorLine2="                                                         ~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\java\clientleger\faismoiundessin\DrawActivity.kt"
            line="250" column="58" />
    </issue>

    <issue id="VectorPath" severity="Warning"
        message="Very long vector path (1137 characters), which is bad for performance. Considering reducing precision, removing minor details or rasterizing vector."
        category="Performance" priority="5" summary="Long vector paths"
        explanation="Using long vector paths is bad for performance. There are several ways to make the `pathData` shorter:&#xA;* Using less precision&#xA;* Removing some minor details&#xA;* Using the Android Studio vector conversion tool&#xA;* Rasterizing the image (converting to PNG)"
        errorLine1="        android:pathData=&quot;M10,9c-0.55,0 -1,0.45 -1,1s0.45,1 1,1 1,-0.45 1,-1 -0.45,-1 -1,-1zM10,13c-0.55,0 -1,0.45 -1,1s0.45,1 1,1 1,-0.45 1,-1 -0.45,-1 -1,-1zM7,9.5c-0.28,0 -0.5,0.22 -0.5,0.5s0.22,0.5 0.5,0.5 0.5,-0.22 0.5,-0.5 -0.22,-0.5 -0.5,-0.5zM10,16.5c-0.28,0 -0.5,0.22 -0.5,0.5s0.22,0.5 0.5,0.5 0.5,-0.22 0.5,-0.5 -0.22,-0.5 -0.5,-0.5zM7,13.5c-0.28,0 -0.5,0.22 -0.5,0.5s0.22,0.5 0.5,0.5 0.5,-0.22 0.5,-0.5 -0.22,-0.5 -0.5,-0.5zM10,7.5c0.28,0 0.5,-0.22 0.5,-0.5s-0.22,-0.5 -0.5,-0.5 -0.5,0.22 -0.5,0.5 0.22,0.5 0.5,0.5zM14,9c-0.55,0 -1,0.45 -1,1s0.45,1 1,1 1,-0.45 1,-1 -0.45,-1 -1,-1zM14,7.5c0.28,0 0.5,-0.22 0.5,-0.5s-0.22,-0.5 -0.5,-0.5 -0.5,0.22 -0.5,0.5 0.22,0.5 0.5,0.5zM17,13.5c-0.28,0 -0.5,0.22 -0.5,0.5s0.22,0.5 0.5,0.5 0.5,-0.22 0.5,-0.5 -0.22,-0.5 -0.5,-0.5zM17,9.5c-0.28,0 -0.5,0.22 -0.5,0.5s0.22,0.5 0.5,0.5 0.5,-0.22 0.5,-0.5 -0.22,-0.5 -0.5,-0.5zM12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM12,20c-4.42,0 -8,-3.58 -8,-8s3.58,-8 8,-8 8,3.58 8,8 -3.58,8 -8,8zM14,16.5c-0.28,0 -0.5,0.22 -0.5,0.5s0.22,0.5 0.5,0.5 0.5,-0.22 0.5,-0.5 -0.22,-0.5 -0.5,-0.5zM14,13c-0.55,0 -1,0.45 -1,1s0.45,1 1,1 1,-0.45 1,-1 -0.45,-1 -1,-1z&quot; />"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\drawable\effects.xml"
            line="8" column="27" />
    </issue>

    <issue id="Overdraw" severity="Warning"
        message="Possible overdraw: Root element paints background `#FFFFFF` with a theme that also paints a background (inferred theme is `@style/Theme.AppCompat.Light`)"
        category="Performance" priority="3" summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;#FFFFFF&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\login.xml"
            line="7" column="5" />
    </issue>

    <issue id="Overdraw" severity="Warning"
        message="Possible overdraw: Root element paints background `#FFFFFF` with a theme that also paints a background (inferred theme is `@style/Theme.AppCompat.Light`)"
        category="Performance" priority="3" summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;#FFFFFF&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="7" column="5" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.drawable.clear` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\drawable\clear.xml"
            line="1" column="1" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.color.colorAccent` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;colorAccent&quot;>#D81B60&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\colors.xml"
            line="6" column="12" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.dimen.activity_horizontal_margin` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\dimens.xml"
            line="4" column="12" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.dimen.activity_vertical_margin` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;dimen name=&quot;activity_vertical_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\dimens.xml"
            line="5" column="12" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.drawable.effects` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\drawable\effects.xml"
            line="1" column="1" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.drawable.extract_color` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\drawable\extract_color.xml"
            line="1" column="1" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.color.ic_launcher_background` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;color name=&quot;ic_launcher_background&quot;>#FFFFFF&lt;/color>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\ic_launcher_background.xml"
            line="3" column="12" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.drawable.import_image` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\drawable\import_image.xml"
            line="1" column="1" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.layout.main` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\main.xml"
            line="2" column="1" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.drawable.share` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="&lt;vector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\drawable\share.xml"
            line="1" column="1" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.app_description` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;app_description&quot;>Acrylic Paint is a free and open-source software (FOSS) that lets you free your creativity!\n\nPress menu for more options.\n\nThanks to Anupam Shrivastava for the idea, to Valerio Bozzolan for reviving the project, and the physicist Marco Gagino for the terrific support. Thanks to all the contributors!\n\nHappy painting! :)&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="11" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.emboss` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;emboss&quot;>Bold (emboss)&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="14" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.blur` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;blur&quot;>Blur&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="15" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.clear_foreground` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;clear_foreground&quot;>Erase drawing only&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="18" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.clear_background` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;clear_background&quot;>Erase background only&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="19" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.save` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;save&quot;>Save&lt;/string>"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="21" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.share` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;share&quot;>Share&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="22" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.about` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;about&quot;>About&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="23" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.open_image` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;open_image&quot;>Open image as background&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="24" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.saved_your_location_to` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;saved_your_location_to&quot;>Saved your artwork to %1$s&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="28" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.select` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;select&quot;>Select&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="29" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.continue_fuck` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;continue_fuck&quot;>Continue&lt;/string> &lt;!-- Workaround to avoid &quot;R.string.continue&quot;, that it&apos;s as a special class-word! D: -->"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="30" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.ok` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;ok&quot;>OK&lt;/string>"
        errorLine2="            ~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="31" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.toolbox_share_title` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;toolbox_share_title&quot;>Share&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="33" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.share_title_template` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;share_title_template&quot;>Look at what I made with Acrylic Paint! --- Acrylic Paint (Simple finger painting) - https://f-droid.org/packages/anupam.acrylic/&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="34" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.share_text_template` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;share_text_template&quot;>Share as text&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="35" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.no_way_to_share` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;no_way_to_share&quot;>Can\&apos;t locate an app to share with…&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="36" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.title_activity_about` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;title_activity_about&quot;>About&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="38" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.select_image_to_open` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;select_image_to_open&quot;>Select image to open&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="41" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.extract_color` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;extract_color&quot;>Extract color (eyedropper)&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="42" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.tap_to_extract_color` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;tap_to_extract_color&quot;>Tap anywhere to extract a color&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="44" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.ability_disabled_need_newer_api_level` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;ability_disabled_need_newer_api_level&quot;>That ability is disabled because it requires a newer Android version (at least API level 17).&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="45" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.smudge` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;smudge&quot;>Smudge&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="46" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.clear_options` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;clear_options&quot;>Deletion options&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="47" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.string.drawing_effects` appears to be unused"
        category="Performance" priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;string name=&quot;drawing_effects&quot;>Drawing effects&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\strings.xml"
            line="48" column="13" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.style.Theme` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;style name=&quot;Theme&quot; parent=&quot;@android:style/Theme.DeviceDefault.Light.DarkActionBar&quot;>"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\theme.xml"
            line="4" column="12" />
    </issue>

    <issue id="UnusedResources" severity="Warning"
        message="The resource `R.style.MyActionBar` appears to be unused" category="Performance"
        priority="3" summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true."
        errorLine1="    &lt;style name=&quot;MyActionBar&quot; parent=&quot;@android:style/Widget.DeviceDefault.Light.ActionBar&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\values\theme.xml"
            line="11" column="12" />
    </issue>

    <issue id="MissingApplicationIcon" severity="Warning"
        message="Should explicitly set `android:icon`, there is no default"
        category="Usability:Icons" priority="5" summary="Missing application icon"
        explanation="You should set an icon for the application as whole because there is no default. This attribute must be set as a reference to a drawable resource containing the image (for example `@drawable/icon`)."
        url="https://developer.android.com/studio/publish/preparing#publishing-configure"
        urls="https://developer.android.com/studio/publish/preparing#publishing-configure"
        errorLine1="    &lt;application" errorLine2="     ~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\AndroidManifest.xml"
            line="14" column="6" />
    </issue>

    <issue id="TextFields" severity="Warning"
        message="This text field does not specify an `inputType`" category="Usability" priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="    &lt;EditText" errorLine2="     ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\chat.xml"
            line="20" column="6" />
    </issue>

    <issue id="TextFields" severity="Warning"
        message="This text field does not specify an `inputType`" category="Usability" priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="51" column="18" />
    </issue>

    <issue id="TextFields" severity="Warning"
        message="This text field does not specify an `inputType`" category="Usability" priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="78" column="18" />
    </issue>

    <issue id="TextFields" severity="Warning"
        message="This text field does not specify an `inputType`" category="Usability" priority="5"
        summary="Missing `inputType`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). &#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="132" column="18" />
    </issue>

    <issue id="Autofill" severity="Warning" message="Missing `autofillHints` attribute"
        category="Usability" priority="3" summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="    &lt;EditText" errorLine2="     ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\chat.xml"
            line="20" column="6" />
    </issue>

    <issue id="Autofill" severity="Warning" message="Missing `autofillHints` attribute"
        category="Usability" priority="3" summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\login.xml"
            line="48" column="18" />
    </issue>

    <issue id="Autofill" severity="Warning" message="Missing `autofillHints` attribute"
        category="Usability" priority="3" summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\login.xml"
            line="75" column="18" />
    </issue>

    <issue id="Autofill" severity="Warning" message="Missing `autofillHints` attribute"
        category="Usability" priority="3" summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="51" column="18" />
    </issue>

    <issue id="Autofill" severity="Warning" message="Missing `autofillHints` attribute"
        category="Usability" priority="3" summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="78" column="18" />
    </issue>

    <issue id="Autofill" severity="Warning" message="Missing `autofillHints` attribute"
        category="Usability" priority="3" summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="105" column="18" />
    </issue>

    <issue id="Autofill" severity="Warning" message="Missing `autofillHints` attribute"
        category="Usability" priority="3" summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="132" column="18" />
    </issue>

    <issue id="Autofill" severity="Warning" message="Missing `autofillHints` attribute"
        category="Usability" priority="3" summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="159" column="18" />
    </issue>

    <issue id="Autofill" severity="Warning" message="Missing `autofillHints` attribute"
        category="Usability" priority="3" summary="Use Autofill"
        explanation="Specify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.&#xA;&#xA;The hints can have any value, but it is recommended to use predefined values like &apos;username&apos; for a username or &apos;creditCardNumber&apos; for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at https://developer.android.com/reference/android/view/View.html.&#xA;&#xA;You can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)."
        url="https://developer.android.com/guide/topics/text/autofill.html"
        urls="https://developer.android.com/guide/topics/text/autofill.html"
        errorLine1="                &lt;EditText" errorLine2="                 ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="187" column="18" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Send&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Send&quot;" errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\chat.xml"
            line="12" column="9" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Enter a message&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:hint=&quot;Enter a message&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\chat.xml"
            line="23" column="9" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Account Login&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Account Login&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\login.xml"
            line="14" column="9" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Email&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:hint=&quot;Email&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\login.xml"
            line="52" column="21" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Password&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:hint=&quot;Password&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\login.xml"
            line="79" column="21" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Connexion&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Connexion&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\login.xml"
            line="99" column="17" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Création d&apos;un compte&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;Création d&apos;un compte&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="14" column="9" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Prénom&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:hint=&quot;Prénom&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="55" column="21" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Nom&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:hint=&quot;Nom&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="82" column="21" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Adresse courriel&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:hint=&quot;Adresse courriel&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="109" column="21" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;pseudonyme&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:hint=&quot;pseudonyme&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="136" column="21" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Mot de passe&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:hint=&quot;Mot de passe&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="163" column="21" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Réécrivez le mot de passe&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                    android:hint=&quot;Réécrivez le mot de passe&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="191" column="21" />
    </issue>

    <issue id="HardcodedText" severity="Warning"
        message="Hardcoded string &quot;Soumettre&quot;, should use `@string` resource"
        category="Internationalization" priority="5" summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;Soumettre&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\register.xml"
            line="212" column="17" />
    </issue>

    <issue id="RelativeOverlap" severity="Warning"
        message="`@id/sentUsername` can overlap `@id/receivedUsername` if @id/receivedUsername, @id/sentUsername grow due to localized text expansion"
        category="Internationalization" priority="3" summary="Overlapping items in RelativeLayout"
        explanation="If relative layout has text or button items aligned to left and right sides they can overlap each other due to localized text expansion unless they have mutual constraints like `toEndOf`/`toStartOf`."
        errorLine1="    &lt;TextView" errorLine2="     ~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\message_list_item.xml"
            line="33" column="6" />
    </issue>

    <issue id="RtlHardcoded" severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text" priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\brush.xml"
            line="12" column="9" />
    </issue>

    <issue id="RtlHardcoded" severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text" priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\brush.xml"
            line="24" column="9" />
    </issue>

    <issue id="RtlHardcoded" severity="Warning"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text" priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\brush.xml"
            line="25" column="9" />
    </issue>

    <issue id="RtlHardcoded" severity="Warning"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text" priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\chat.xml"
            line="17" column="9" />
    </issue>

    <issue id="RtlHardcoded" severity="Warning"
        message="Consider replacing `android:layout_toLeftOf` with `android:layout_toStartOf=&quot;@id/send&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text" priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_toLeftOf=&quot;@id/send&quot;/>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\chat.xml"
            line="26" column="9" />
    </issue>

    <issue id="RtlHardcoded" severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text" priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\Gerard\Documents\POLY\3RD YEAR\SESSION 2\LOG3990 - Projet 3\log3900-210\android\app\src\main\res\layout\menu.xml"
            line="11" column="9" />
    </issue>

</issues>
